[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A Comprehensive Study on Particulate Matter Pollution",
    "section": "",
    "text": "1 Introduction\nIn this study, we talk about the air pollution, investigating the various factors that are related to it. Generally speaking, does time and location have a strong correlation with air pollution? The main value we are going to dive into detail is PM 2.5, a number that indicates the amount of particles that are 2.5 microns or less in diameter in air. The higher the value, the more serious the air pollution is.\nIn detail, we are going to employ exploratory data analysis to investigate the data from WHO to dive into details about air quality. Some of questions we will answer are below:\n\nIs the air quality becoming worse from 2010 to 2019, overall and locally?\nIf people want to avoid air pollution, where should they choose to live?\nDoes the air quality generally change significantly over a year?\nWhich place has the best air quality over the last 10 years?\nIf the United Nation has more funding, which places should they commit more to improve the air quality?\nIn the future, can we predict any trend for air quality based on historical data?"
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "2.1 Description",
    "text": "2.1 Description\nThe data provides us comprehensive information about the mean, minimum, and max PM2.5 at each residence area type, country, continent from 2010 to 2019. Here are some ways that I’m going to use to analyze the data based on our needs.\n\nPre-processing:\n\nRemove unneeded value and handle NaN value.\nTransform the data for later use by applying pivot_longer(), mutate(), etc.\n\nAnalyze air quality change over time:\n\nUse time series line chart to plot PM2.5 change from 2010 to 2019, smooth the plot to see the general trend. This can be done in geom-line() function.\nCreate multiple box charts that shows min, max, mean value for each year and each continent in facet graph using facet_wrap().\nCreate a histogram that shows the average PM2.5 for each country and continent.\n\nAnalyze air quality change over location:\n\nCreate a Heatmap using geom_tile to show country differences for PM2.5 and highlight those outliers.\nUse bar chart to show the average and range of PM2.5 per continent and country.\n\nAnalyze air quality change over resident type (urban, rural, cities, towns):\n\nVisualize the resident type difference per continent by evaluating the average PM2.5 in the facet graph using ggplot and facet_wrap().\nPlot the average PM2.5 per continent per resident type as a scatter plot to show if the PM2.5 are significantly different across all resident types.\nCreate a ggalluvial plot over each resident type and year to show the value change for each resident type.\n\nPutting it all together, there are 3 dimensions that we are going to analyze the data, at the end, based on what we observe from the visualizations above, we will use any package that we learned from class to dive deeper into the detail to analyze the abnormality or general trends to validate our hypothesis and make the analysis comprehensive."
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nLet’s look at our data and understand it. We only have 1 dataset with 34 columns and 9450 rows. We first check if there are any columns that have no useful information for our analysis and select the ones that are useful for us.\nThe second step is to check if the remaining columns have any missing or incorrect values and adjust them. Here are the breakdown steps:\n\n\nCode\n# import\nlibrary(readr)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyr)\n\n# read csv\ndata &lt;- read_csv(\"data_pollution.csv\")\n\n\nRows: 9450 Columns: 34\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (14): IndicatorCode, Indicator, ValueType, ParentLocationCode, ParentLo...\ndbl   (4): Period, FactValueNumeric, FactValueNumericLow, FactValueNumericHigh\nlgl  (15): IsLatestYear, Dim2 type, Dim2, Dim2ValueCode, Dim3 type, Dim3, Di...\ndttm  (1): DateModified\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\n# count distinct values\ndistinct_counts &lt;- data %&gt;% summarise_all(n_distinct)\n\nlong_data &lt;- pivot_longer(distinct_counts, cols = everything(), names_to = \"ColumnName\", values_to = \"DistinctCount\")\n\n# plot the number of distinct values per column in our dataset\nggplot(long_data, aes(x = ColumnName, y = DistinctCount)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Column Name\", y = \"# of distinct values\", title = \"Check distinct values\")\n\n\n\n\n\nWe can see a lot of columns have a few distinct value, let’s check if they equals 1 or 0, if yes, then we may need to remove these columns since they don’t contribute to our analysis.\n\n\nCode\n# check insignificant data\ninsignificant_data &lt;- long_data %&gt;% \n                               filter(DistinctCount &lt;= 1)\ninsignificant_data\n\n\n# A tibble: 22 × 2\n   ColumnName    DistinctCount\n   &lt;chr&gt;                 &lt;int&gt;\n 1 IndicatorCode             1\n 2 Indicator                 1\n 3 ValueType                 1\n 4 Location type             1\n 5 Period type               1\n 6 Dim1 type                 1\n 7 Dim2 type                 1\n 8 Dim2                      1\n 9 Dim2ValueCode             1\n10 Dim3 type                 1\n# ℹ 12 more rows\n\n\nAfter double-checking our dataset, we found these data could be removed. We then check the NaN values of the rest of the columns.\n\n\nCode\n# check for NaN\nselected_columns &lt;- setdiff(colnames(data), colnames(insignificant_data))\nselected_data &lt;- data %&gt;% select(all_of(selected_columns))\n\nnan_counts &lt;- sapply(selected_data, function(x) sum(is.nan(x)))\n\nnan_counts\n\n\n             IndicatorCode                  Indicator \n                         0                          0 \n                 ValueType         ParentLocationCode \n                         0                          0 \n            ParentLocation              Location type \n                         0                          0 \n       SpatialDimValueCode                   Location \n                         0                          0 \n               Period type                     Period \n                         0                          0 \n              IsLatestYear                  Dim1 type \n                         0                          0 \n                      Dim1              Dim1ValueCode \n                         0                          0 \n                 Dim2 type                       Dim2 \n                         0                          0 \n             Dim2ValueCode                  Dim3 type \n                         0                          0 \n                      Dim3              Dim3ValueCode \n                         0                          0 \n    DataSourceDimValueCode                 DataSource \n                         0                          0 \n    FactValueNumericPrefix           FactValueNumeric \n                         0                          0 \n              FactValueUoM  FactValueNumericLowPrefix \n                         0                          0 \n       FactValueNumericLow FactValueNumericHighPrefix \n                         0                          0 \n      FactValueNumericHigh                      Value \n                         0                          0 \n    FactValueTranslationID               FactComments \n                         0                          0 \n                  Language               DateModified \n                         0                          0 \n\n\nWe can conclude that there is no missing value in the data we selected."
  }
]